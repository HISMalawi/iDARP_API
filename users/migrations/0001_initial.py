# Generated by Django 4.1 on 2023-09-25 12:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('djtriggers', '0008_alter_trigger_id_alter_triggerresult_id'),
        ('data_dictionary', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('p_photo_path', models.TextField(blank=True, null=True)),
                ('fname', models.CharField(max_length=30)),
                ('sname', models.CharField(max_length=30)),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True)),
                ('org_email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('designation', models.CharField(max_length=255)),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tentative_organization', models.CharField(blank=True, max_length=255, null=True)),
                ('attempts', models.IntegerField(null=True)),
                ('last_attempt', models.DateTimeField(null=True)),
                ('hits', models.IntegerField(null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AssignedRole',
            fields=[
                ('trigger_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='djtriggers.trigger')),
                ('assigned_role_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'assigned_roles',
                'managed': True,
            },
            bases=('djtriggers.trigger',),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('org_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('domain', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.IntegerField()),
                ('country', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'organizations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OrgRole',
            fields=[
                ('org_role_id', models.AutoField(primary_key=True, serialize=False)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.organization')),
            ],
            options={
                'db_table': 'org_roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RoleStatus',
            fields=[
                ('role_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=255)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'role_statuses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TempOtp',
            fields=[
                ('otp_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255)),
                ('otp', models.CharField(max_length=6)),
                ('created_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'temp_otp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserAuditTrail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('cookie_id', models.CharField(blank=True, max_length=255, null=True)),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('object', models.CharField(blank=True, max_length=255, null=True)),
                ('old_value', models.TextField(blank=True, null=True)),
                ('new_value', models.TextField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True)),
                ('referer', models.CharField(blank=True, max_length=255, null=True)),
                ('script_name', models.CharField(blank=True, max_length=255, null=True)),
                ('page', models.CharField(blank=True, max_length=255, null=True)),
                ('done_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_audit_trail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OrgRoleStatusChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField()),
                ('changed_on', models.DateTimeField()),
                ('org_role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.orgrole')),
            ],
            options={
                'db_table': 'org_role_status_change',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OrgRoleStatus',
            fields=[
                ('org_role_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField()),
                ('changed_on', models.DateTimeField(blank=True, null=True)),
                ('org_role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.orgrole')),
            ],
            options={
                'db_table': 'org_role_statuses',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='orgrole',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.role'),
        ),
        migrations.CreateModel(
            name='AssignedRoleStatus',
            fields=[
                ('assigned_role_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('state_changed_on', models.DateTimeField(auto_now_add=True)),
                ('assigned_role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.assignedrole')),
                ('role_status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.rolestatus')),
            ],
            options={
                'db_table': 'assigned_role_statuses',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='assignedrole',
            name='org_role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.orgrole'),
        ),
        migrations.AddField(
            model_name='assignedrole',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.organization'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='SourceCustodian',
            fields=[
                ('custodian_id', models.AutoField(primary_key=True, serialize=False)),
                ('broker', models.BooleanField()),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='data_dictionary.datasource')),
                ('org_role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.orgrole')),
            ],
            options={
                'db_table': 'data_custodian',
                'managed': True,
                'unique_together': {('data_source', 'org_role')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='orgrole',
            unique_together={('org', 'role')},
        ),
        migrations.CreateModel(
            name='DataCustodian',
            fields=[
                ('custodian_id', models.AutoField(primary_key=True, serialize=False)),
                ('broker', models.BooleanField()),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='data_dictionary.datasource')),
                ('org_role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.orgrole')),
            ],
            options={
                'db_table': 'data_custodians',
                'managed': True,
                'unique_together': {('data_source', 'org_role')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='assignedrole',
            unique_together={('org_role', 'user')},
        ),
    ]
